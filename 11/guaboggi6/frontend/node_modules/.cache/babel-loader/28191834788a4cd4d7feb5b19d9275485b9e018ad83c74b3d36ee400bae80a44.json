{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\Desktop\\\\react.nodejs\\\\11\\\\guaboggi6\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport { Suspense } from 'react';\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"\\uC774\\uBCA4\\uD2B8\\uC758 \\uC0C1\\uC138 \\uB0B4\\uC6A9\\uC744 \\uC77D\\uC5B4\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"\\uC774\\uBCA4\\uD2B8 \\uBAA9\\uB85D\\uC744 \\uC77D\\uC5B4\\uC624\\uB294 \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"선택한 이벤트에 대한 상세 내용을 가져오는데 실패하였습니다\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // throw new Response(JSON.stringify({message: '데이터를 가져오는데 실패하였습니다.'}),{status:500},);\n    throw json({\n      message: \"데이터를 가져오는데 실패하였습니다.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"선택된 이벤트에 대한 삭제처리에 실패하였습니다\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","redirect","defer","Await","Suspense","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/user1/Desktop/react.nodejs/11/guaboggi6/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {\r\n  useRouteLoaderData,\r\n  json,\r\n  redirect,\r\n  defer,\r\n  Await,\r\n} from \"react-router-dom\";\r\nimport { Suspense } from 'react';\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\nfunction EventDetailPage() {\r\n  const { event, events } = useRouteLoaderData(\"event-detail\");\r\n  return (\r\n    <>\r\n    <Suspense fallback={<p style={{textAlign: 'center'}}>이벤트의 상세 내용을 읽어오는 중입니다...</p>}>\r\n      <Await resolve={event}>\r\n        {loadedEvent => <EventItem event={loadedEvent} />}\r\n      </Await>\r\n    </Suspense>\r\n    <Suspense fallback={<p style={{textAlign: 'center'}}>이벤트 목록을 읽어오는 중입니다...</p>}>\r\n      <Await resolve={events}>\r\n        { loadedEvents => <EventsList events={loadedEvents} />}\r\n      </Await>\r\n    </Suspense>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id) {\r\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"선택한 이벤트에 대한 상세 내용을 가져오는데 실패하였습니다\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.event;\r\n  }\r\n}\r\n\r\nasync function loadEvents() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n  if (!response.ok) {\r\n    // throw new Response(JSON.stringify({message: '데이터를 가져오는데 실패하였습니다.'}),{status:500},);\r\n    throw json(\r\n      { message: \"데이터를 가져오는데 실패하였습니다.\" },\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    const resData = await response.json();\r\n    return resData.events;\r\n  }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n  return defer({\r\n    event: await loadEvent(id),\r\n    events: loadEvents(),\r\n  });\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n  const eventId = params.eventId;\r\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\r\n    method: request.method,\r\n  });\r\n  if (!response.ok) {\r\n    throw json(\r\n      { message: \"선택된 이벤트에 대한 삭제처리에 실패하였습니다\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n\r\n  return redirect(\"/events\");\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}