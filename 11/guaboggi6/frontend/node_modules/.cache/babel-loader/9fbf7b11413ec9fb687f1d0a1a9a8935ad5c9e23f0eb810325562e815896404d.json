{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\Desktop\\\\react.nodejs\\\\11\\\\guaboggi5\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json, redirect } from 'react-router-dom';\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    body: JSON.stringify(eventData),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: '이벤트를 저장하는데 실패하였습니다.'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","body","JSON","stringify","headers","status","ok","message","$RefreshReg$"],"sources":["C:/Users/user1/Desktop/react.nodejs/11/guaboggi5/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json, redirect } from 'react-router-dom';\r\nimport EventForm from \"../components/EventForm\";\r\nfunction NewEventPage(){\r\n    return(\r\n        <EventForm />\r\n    )\r\n}\r\nexport default NewEventPage;\r\n\r\nexport async function action({request, params}){\r\n    const data = await request.formData();\r\n\r\n    const eventData = {\r\n        title : data.get('title'),\r\n        image: data.get('image'),\r\n        date: data.get('date'),\r\n        description : data.get('description'),\r\n    }\r\n\r\n    const response = await fetch('http://localhost:8080/events', {\r\n        method: 'POST',\r\n        body: JSON.stringify(eventData),\r\n        headers:{\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    });\r\n\r\n    if(response.status===422){\r\nreturn response;\r\n    }\r\n\r\n    if(!response.ok){\r\n        throw json({ message: '이벤트를 저장하는데 실패하였습니다.'}, {status:500});\r\n    }\r\n\r\n    return redirect('/events');\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,SAASC,YAAYA,CAAA,EAAE;EACnB,oBACID,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAErB;AAACC,EAAA,GAJQL,YAAY;AAKrB,eAAeA,YAAY;AAE3B,OAAO,eAAeM,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAC3C,MAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAGH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACzBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAGP,IAAI,CAACI,GAAG,CAAC,aAAa;EACxC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC;IAC/BY,OAAO,EAAC;MACJ,cAAc,EAAG;IACrB;EACJ,CAAC,CAAC;EAEF,IAAGN,QAAQ,CAACO,MAAM,KAAG,GAAG,EAAC;IAC7B,OAAOP,QAAQ;EACX;EAEA,IAAG,CAACA,QAAQ,CAACQ,EAAE,EAAC;IACZ,MAAM9B,IAAI,CAAC;MAAE+B,OAAO,EAAE;IAAqB,CAAC,EAAE;MAACF,MAAM,EAAC;IAAG,CAAC,CAAC;EAC/D;EAEA,OAAO5B,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAS,EAAA;AAAAsB,YAAA,CAAAtB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}