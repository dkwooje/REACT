{"ast":null,"code":"var _jsxFileName = \"D:\\\\Workspaces\\\\React\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: '선택한 이벤트에 대한 상세 내용을 가져오는데 실패하였습니다'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action() {}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useRouteLoaderData","json","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","action","$RefreshReg$"],"sources":["D:/Workspaces/React/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData,json } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nfunction EventDetailPage() {\r\n  const data = useRouteLoaderData('event-detail');\r\n  return (\r\n    <EventItem event={data.event} />\r\n  );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({request, params}){\r\n  const id = params.eventId;\r\n  const response = await fetch('http://localhost:8080/events/'+id);\r\n  if(!response.ok){\r\n    throw json({message: '선택한 이벤트에 대한 상세 내용을 가져오는데 실패하였습니다'},{status:500});\r\n  }else{\r\n    return response;\r\n  }\r\n}\r\n\r\nexport async function action() {}\r\n"],"mappings":";;AAAA,SAASA,kBAAkB,EAACC,IAAI,QAAQ,kBAAkB;AAC1D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,IAAI,GAAGP,kBAAkB,CAAC,cAAc,CAAC;EAC/C,oBACEI,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEpC;AAACN,EAAA,CALQD,eAAe;EAAA,QACTL,kBAAkB;AAAA;AAAAa,EAAA,GADxBR,eAAe;AAOxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAC7C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACH,EAAE,CAAC;EAChE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMpB,IAAI,CAAC;MAACqB,OAAO,EAAE;IAAkC,CAAC,EAAC;MAACC,MAAM,EAAC;IAAG,CAAC,CAAC;EACxE,CAAC,MAAI;IACH,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,eAAeK,MAAMA,CAAA,EAAG,CAAC;AAAC,IAAAX,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}