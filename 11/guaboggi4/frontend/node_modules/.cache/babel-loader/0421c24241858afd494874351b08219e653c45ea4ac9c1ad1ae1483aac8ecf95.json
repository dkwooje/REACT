{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\Desktop\\\\react.nodejs\\\\11\\\\guaboggi2\\\\frontend\\\\src\\\\App.js\";\nimport { Route, RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 24\n  }, this)\n}, {\n  path: '/events',\n  element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 30\n  }, this)\n}, {\n  path: '/events/:eventId',\n  element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 39\n  }, this)\n}, {\n  path: '/events/new',\n  element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 34\n  }, this)\n}, {\n  path: '/events/:eventId/edit',\n  element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 44\n  }, this)\n} //컴포넌트를 만들면 자동으로 import가 추가 된다.\n]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Route","RouterProvider","createBrowserRouter","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","App","_c","$RefreshReg$"],"sources":["C:/Users/user1/Desktop/react.nodejs/11/guaboggi2/frontend/src/App.js"],"sourcesContent":["import {Route, RouterProvider, createBrowserRouter} from 'react-router-dom';\nimport HomePage from './pages/HomePage';\nimport EventsPage from './pages/EventsPage';\nimport EventDetailPage from './pages/EventDetailPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EditEventPage from './pages/EditEventPage';\n\nconst router = createBrowserRouter([\n  {path: '/', element: <HomePage/>},\n  {path: '/events', element: <EventsPage />},\n  {path: '/events/:eventId', element: <EventDetailPage />},\n  {path: '/events/new', element: <NewEventPage/>},\n  {path: '/events/:eventId/edit', element: <EditEventPage />} //컴포넌트를 만들면 자동으로 import가 추가 된다.\n])\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n\n\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n"],"mappings":";AAAA,SAAQA,KAAK,EAAEC,cAAc,EAAEC,mBAAmB,QAAO,kBAAkB;AAC3E,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,aAAa,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,MAAM,GAAGR,mBAAmB,CAAC,CACjC;EAACS,IAAI,EAAE,GAAG;EAAEC,OAAO,eAAEH,OAAA,CAACN,QAAQ;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,EACjC;EAACL,IAAI,EAAE,SAAS;EAAEC,OAAO,eAAEH,OAAA,CAACL,UAAU;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,EAC1C;EAACL,IAAI,EAAE,kBAAkB;EAAEC,OAAO,eAAEH,OAAA,CAACJ,eAAe;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,EACxD;EAACL,IAAI,EAAE,aAAa;EAAEC,OAAO,eAAEH,OAAA,CAACH,YAAY;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC;AAAC,CAAC,EAC/C;EAACL,IAAI,EAAE,uBAAuB;EAAEC,OAAO,eAAEH,OAAA,CAACF,aAAa;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC,CAAC,CAAC;AAAA,CAC7D,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EACb,oBAAOR,OAAA,CAACR,cAAc;IAACS,MAAM,EAAEA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACE,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;;AAGlB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}