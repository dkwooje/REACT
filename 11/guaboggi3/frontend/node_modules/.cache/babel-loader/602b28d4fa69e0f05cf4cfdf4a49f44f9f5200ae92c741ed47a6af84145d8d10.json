{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user1\\\\Desktop\\\\react.nodejs\\\\11\\\\guaboggi3\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  /*\n    if(data.isError){\n      return<p>{data.message}</p>\n    }\n  */\n  const events = data;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //  return {isError: true, message: '데이터를 가져오는데 실패하였습니다.'}\n    throw {\n      message: '데이터를 가져오는데 실패하였습니다.'\n    };\n  } else {\n    const resData = await response.json();\n    return resData.events;\n    // return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","message","resData","json","$RefreshReg$"],"sources":["C:/Users/user1/Desktop/react.nodejs/11/guaboggi3/frontend/src/pages/Events.js"],"sourcesContent":["\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const data = useLoaderData();\n/*\n  if(data.isError){\n    return<p>{data.message}</p>\n  }\n*/\n  const events = data;\n\n  return <EventsList events={events} />;\n}\nexport default EventsPage;\n\n\nexport async function loader(){\n\n  const response = await fetch(\"http://localhost:8080/events\");\n\n    if(!response.ok){\n\n      //  return {isError: true, message: '데이터를 가져오는데 실패하였습니다.'}\n      throw{message: '데이터를 가져오는데 실패하였습니다.'}\n\n    }else{\n      const resData = await response.json();\n        return resData.events;  \n      // return response;\n    }\n}"],"mappings":";;AACA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAC9B;AACA;AACA;AACA;AACA;EACE,MAAMO,MAAM,GAAGD,IAAI;EAEnB,oBAAOH,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACvC;AAACN,EAAA,CAVQD,UAAU;EAAA,QACJJ,aAAa;AAAA;AAAAY,EAAA,GADnBR,UAAU;AAWnB,eAAeA,UAAU;AAGzB,OAAO,eAAeS,MAAMA,CAAA,EAAE;EAE5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE1D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IAEd;IACA,MAAK;MAACC,OAAO,EAAE;IAAqB,CAAC;EAEvC,CAAC,MAAI;IACH,MAAMC,OAAO,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IACnC,OAAOD,OAAO,CAACX,MAAM;IACvB;EACF;AACJ;AAAC,IAAAK,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}